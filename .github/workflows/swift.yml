name: Swift

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    env:
      SCHEME: "swift-action-test"
      DEVICE: "iPhone 11"
      DERIVED_DATA_PATH: "DerivedData"
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: |
        set -o pipefail && xcodebuild clean -scheme $SCHEME -destination "platform=iOS Simulator,name=$DEVICE" -derivedDataPath $DERIVED_DATA_PATH build-for-testing | xcpretty --color --simple
    - name: Upload products
      uses: actions/upload-artifact@v2
      with:
        name: Products
        path: DerivedData/Build/Products
  
  unit_test:
    name: Unit test
    env:
      DEVICE: "iPhone 11"
      DERIVED_DATA_PATH: "DerivedData"
      UNIT_TEST_TARGET: "swift-action-testTests"
    runs-on: macOS-latest
    needs: build
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Download products
      uses: actions/download-artifact@v2
      with:
        name: Products
    - name: Run unit tests
      run: |
        set -o pipefail && xcodebuild test-without-building -xctestrun $(find . -type f -name "*.xctestrun") -destination "platform=iOS Simulator,name=$DEVICE" -derivedDataPath $DERIVED_DATA_PATH -enableCodeCoverage YES -only-testing:$UNIT_TEST_TARGET | xcpretty --color --simple
    - name: Upload test logs
      uses: actions/upload-artifact@v2
      with:
        name: TestLogs
        path: DerivedData/Logs/Test

  cleanup_job:
    name: Delete artifacts
    runs-on: macOS-latest
    steps:
    - name: call webhook to delete artifacts
      env:
        FOR_WEBHOOKS_SECRET: ${{ secrets.FOR_WEBHOOKS_SECRET }}
      run: |
        echo "::add-mask::$FOR_WEBHOOKS_SECRET"
        curl --verbose --fail --show-error --location --request POST "https://api.github.com/repos/$GITHUB_REPOSITORY/dispatches" --header "Authorization: token $FOR_WEBHOOKS_SECRET" --header 'Content-Type: application/json' --header 'Accept: application/vnd.github.everest-preview+json' --data-raw "{ \"event_type\": \"delete_all_artifacts\", \"client_payload\": {\"parent_runid\": \"$GITHUB_RUN_ID\", \"parent_repo\": \"$GITHUB_REPOSITORY\"} }"
